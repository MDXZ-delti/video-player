@use "sass:math";
@use "colors";
@use "fonts";

$phi: math.div(math.sqrt(5) + 1, 2);
$Phi: math.div(math.sqrt(5) - 1, 2);

:root {
	--hue: 225deg;
	--saturation: 0%;
	--lightness: 96%;

	--duration: .35s;
	--gap: .5rem;
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

[hidden] {
	display: none !important;
}

html,
body,
#drag-panel,
.player {
	height: 100%;
}

body {
	font: .8375rem 'JetBrains Mono', monospace;
}

#drop-overlay {
	position: absolute;
	inset: 0;
	z-index: 1;
}

#drag-panel {
	display: grid;
	place-content: center;
	place-items: center;
	gap: var(--gap);

	font-weight: bold;
	font-size: 2.25rem;
	color: var(--text2);
	background-image: radial-gradient(circle at 100% 0, var(--surface1), var(--surface1) 50%, var(--surface3) 75%, var(--surface1) 75%);

	transition: box-shadow var(--duration);

	&[data-file-hover] {
		box-shadow: inset 0 0 .75em .25em;
	}
}

#drag-panel-text {
	margin: 0 1em;
	text-align: center;
}

button,
input {
	border: none;

	font-family: inherit;
	font-size: inherit;
	background-color: transparent;
	color: inherit;

	user-select: none;
}

button,
input[type="range"]::-webkit-slider-thumb {
	cursor: pointer;
}

input[type="file"] {
	max-inline-size: 20em;

	font-size: .5em;
	padding: .5em;
	border-radius: .5em;

	&::file-selector-button {
		font: inherit;
		color: var(--text2);
		background: var(--surface2);
		box-shadow: 0 0 .5em hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 15%));

		border: none;
		border-radius: inherit;

		--spacing: .75em;
		padding-block: calc(var(--spacing) * $Phi);
		padding-inline: var(--spacing);
		margin-inline-end: var(--spacing);

		transition-duration: var(--duration);
		transition-property: background-color, box-shadow;

		&:hover {
			background-color: var(--surface1);
		}

		&:active {
			box-shadow: none;
		}
	}
}

.player {
	display: flex;
	flex-direction: column;

	// This can be seen when a file is hovering over a video
	background-image: radial-gradient(var(--surface4), var(--surface3));

	video {
		flex: 1;
		min-height: 0;
		background-color: var(--surface2);

		transition-duration: var(--duration);
		transition-property: scale, border-radius, border;
	}

	&[data-file-hover] video {
		scale: .75;
		border-radius: 1rem;
		border: medium solid var(--surface4);
	}
}

.controls {
	--spacing: .75rem;

	position: relative;

	display: flex;
	align-items: center;
	gap: var(--gap);
	padding: var(--spacing);

	color: var(--text2);
	background-color: var(--surface2);

	& > * {
		height: 2.75rem;
	}

	button {
		transition: var(--duration);
		transition-property: color, background-color, box-shadow, font-variation-settings;

		&:is(:hover, :focus-visible) {
			color: var(--text1);
			background-color: var(--surface3);
			box-shadow: 0 0 1px;
		}
	}

	[class$="-btn"] {
		border-radius: 50%;
		aspect-ratio: 1;

		&:is(:hover, :focus-visible) {
			font-variation-settings: 'FILL' 1;
		}
	}

}

#video-bar {
	position: absolute;
	inset: 0;
	translate: 0 -50%;

	transition: var(--duration);
	transition-property: block-size, height;
	block-size: .375rem;

	&:is(:hover, :focus-visible) {
		block-size: .5rem;
	}
}

input[type="range"]::-webkit-slider-thumb {
	border-radius: 50%;
	transition: box-shadow var(--duration);

	&:is(:hover, :focus-visible) {
		margin: 0;
		box-shadow: 0 0 0 .5em hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 15%));
	}
}

#time-indicator {
	white-space: nowrap;
	border-radius: 1.25rem;
	padding-inline: var(--spacing);
}

.duration::before {
	content: ' / ';
}

#file-name-container {
	display: inline-flex;
	place-items: center;

	min-width: 5em;
}

#file-name {
	max-inline-size: 30ch;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;

	&::before {
		content: 'â€¢';
		margin-inline-end: calc(var(--spacing) + var(--gap));
	}
}

#speed-controls {
	// Push to the right
	margin-inline-start: auto;

	text-align: center;
	cursor: text;

	border: thin solid var(--surface4);
	border-radius: 1.25rem;

	inline-size: 5em;
	padding-inline: var(--spacing);
	box-shadow: inset 0 0 .25em hsl(var(--surface-shadow) / calc(var(--shadow-strength) + 15%));

	transition: var(--duration);
	transition-property: inline-size, width;

	&::-webkit-inner-spin-button {
		transition-duration: var(--duration);
		transition-property: margin, opacity;

		opacity: 0;
		margin-inline-start: -1em;
	}

	&:is(:hover, :focus-visible) {
		inline-size: 6em;

		&::-webkit-inner-spin-button {
			opacity: 1;
			margin: 0;
		}
	}
}
